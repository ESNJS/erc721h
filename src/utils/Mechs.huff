#include "./utils/Misc.huff"

#define constant MASK64 = 0xffffffffffffffff
#define constant POS_MAX = 0xffffffff00

// based off: https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#compute_shuffled_index
#define macro MECHS__SHUFFLE(mem1, mem2) = takes(4) returns(4) {
  // takes:               [seed, index, index_count, iters]

  __Mechs__shuffleContinue:
    //                    [seed, index, index_count, iters]
    <mem1> mstore      // [index, index_count, iters]
    0x20 <mem1> sha3   // [seed', index, index_count, iters]
    dup3 dup1          // [index_count, index_count, seed' index, index_count, iters]
    dup3 mod           // [pivot, index_count, seed', index, index_count, iters]
    dup4 dup3          // [index_count, index, pivot, index_count, seed', index, index_count, iters]
    sub add mod        // [flip, seed', index, index_count, iters]
    dup3 dup2 MAX()    // [position, flip, seed', index, index_count, iters]
    dup1 [POS_MAX] and // [masked_position, position, flip, seed', index, index_count, iters]
    <mem2> mstore      // [position, flip, seed', index, index_count, iters]
    0x40 <mem1> sha3   // [rand2, position, flip, seed', index, index_count, iters]
    swap1 0xff and shr // [rand_bit_unmasked, flip, seed', index, index_count, iters]
    0x1 and            // [rand_bit, flip, seed', index, index_count, iters]
    swap2 swap3 swap2  // [rand_bit, flip, index, seed', index_count, iters]
    NOT_TERNARY()      // [index', seed', index_count, iters]
    swap1 swap3        // [iters, index', index_count, seed']
    SUB1() swap3       // [seed', index', index_count, iters']
  dup4 __Mechs__shuffleContinue jumpi

  // returns:             [seed', index', index_count, 0]
}
