#include "./utils/Misc.huff"
#include "./ERC721H.huff"


#define function mint(address, uint256) nonpayable returns ()
#define function safeMint(address, uint256) nonpayable returns ()

#define constant ERC721H__START_TOKEN_ID = 0x1

#define macro MINT() = takes(0) returns(0) {
  NO_VALUE_CHECK(returndatasize)
  0x24 calldataload  // [quantity]
  0x04 calldataload  // [to, quantity]
  ERC721H__MINT(callvalue, callvalue, 0x20)
  callvalue RETURN1(callvalue)
}

#define macro SAFE_MINT() = takes(0) returns(0) {
  NO_VALUE_CHECK(returndatasize)
  0x24 calldataload  // [quantity]
  0x04 calldataload  // [to, quantity]
  0x80 0x80 mstore   // [to, quantity]
  ERC721H__SAFE_MINT(callvalue, callvalue, 0x1c, 0x20, 0x60)
  callvalue RETURN1(callvalue)
}

#define macro EMPTY_STRING() = takes(0) returns(0) {
  NO_VALUE_CHECK(returndatasize)
  0x20 callvalue mstore
  0x40 callvalue return
}

#define macro CONSTRUCTOR() = takes(0) returns(0) {
  ERC721H_CONSTRUCTOR()
}

#define macro MAIN() = takes(0) returns(0) {
  GET_SELECTOR()
  ERC721H_SELECTOR_SWITCH(name, symbol, tokenURI)
  dup1 __FUNC_SIG(mint) eq mint jumpi
  dup1 __FUNC_SIG(safeMint) eq safeMint jumpi
  returndatasize returndatasize revert

  mint:
    MINT()
  safeMint:
    SAFE_MINT()
  name:
    EMPTY_STRING()
  symbol:
    EMPTY_STRING()
  tokenURI:
    EMPTY_STRING()
}
